{"version":3,"sources":["components/mapViewDemo/index.js","components/mapViewDemo/mapUtils.js","App.js","reportWebVitals.js","index.js"],"names":["mapboxgl","workerClass","MapboxWorker","accessToken","MapViewDemo","data","console","log","mapContainer","useRef","useEffect","map","Map","style","center","zoom","container","getCanvasContainer","svg","d3","append","attr","project","CenterLon","CenterLat","LngLat","dots","selectAll","enter","on","e","d","tooltip","transition","duration","pageX","pageY","city","state","kindnessFormatted","htmlString","html","showTooltip","hideTooltip","render","x","y","resize","remove","className","ref","id","App","useState","setData","Tabletop","init","key","simpleSheet","then","catch","warn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02b8c97d.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport * as d3 from 'd3'\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp'\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker'\nimport { showTooltip, hideTooltip } from './mapUtils'\n\nimport '../../styles/Map.css'\n\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoiY21vcm9uZXkiLCJhIjoiY2tudGNscDJjMDFldDJ3b3pjMTh6ejJyayJ9.YAPmFkdy_Eh9K20cFlIvaQ'\nmapboxgl.workerClass = MapboxWorker\nmapboxgl.accessToken = MAPBOX_ACCESS_TOKEN\n\nconst US_CENTER_LAT = 39.8283\nconst US_CENTER_LNG = -98.5795\n\nconst MapViewDemo = ({ data }) => {\n    console.log(\"Map View Demo Data --> \", data)\n\n    // Make sure we are only rendering the full map when we actually have data\n    if (data === null) {\n        return null\n    }\n\n    const mapContainer = useRef()\n\n    useEffect(() => {\n        const map = new mapboxgl.Map({\n            'container': 'map',\n            style: 'mapbox://styles/mapbox/light-v10',\n            center: [US_CENTER_LNG, US_CENTER_LAT],\n            zoom: 3.75,\n        })\n\n        var container = map.getCanvasContainer()\n        var svg = d3\n            .select(container)\n            .append(\"svg\")\n            .attr(\"width\", \"100%\")\n            .attr(\"height\", \"100%\")\n            .style(\"position\", \"absolute\")\n            .style(\"z-index\", 2)\n            .style('top', 0)\n            .style('left', 0)\n\n        // write projection function\n        const project = ({ CenterLon, CenterLat }) => {\n            return map.project(new mapboxgl.LngLat(CenterLon, CenterLat))\n        }\n\n        var dots = svg\n            .selectAll(\"circle\")\n            .data(data)\n            .enter()\n            .append(\"circle\")\n            .attr(\"r\", 7)\n            .style(\"fill\", \"steelblue\")\n            .on('mouseover', (e, d) => {\n                showTooltip(e, d)\n            })\n            .on('mouseout', (e, d) => {\n                hideTooltip()\n            })\n\n        // define render function for mapbox\n        const render = () => dots \n            .attr('cx', d => project(d).x)\n            .attr('cy', d => project(d).y)\n\n        map.on('viewreset', render)\n        map.on('move', render)\n        map.on('moveend', render)\n\n        map.on('load', () => {\n            map.resize()\n        })\n\n        render()\n\n        return () => map.remove()\n    }, [])\n\n    return (\n        <div className=\"map-container\" ref={mapContainer} id='map'>\n            <div className=\"map-tooltip\" style={{\"opacity\": 0}}>\n                <p>Bhupi Ghupi</p>\n            </div>\n        </div>\n    )\n}\n\nexport default MapViewDemo\n","import * as d3 from 'd3'\n\nconst DEFAULT_KINDESS = 'A random act of kindess took place!'\n\nconst showTooltip = (e, d) => {\n    const tooltip = d3.select('.map-tooltip')\n    tooltip\n        .transition()\n        .duration(0)\n        .style('opacity', 0.8)\n        .style('left', `${e.pageX}px`)\n        .style('top', `${e.pageY - 50}px`)\n\n    // also update the text\n    const city = d['CITY where act of kindness took place']\n    const state = d['STATE']\n    const kindness = d['[Optional] Tell us about the act of kindness you received!']\n    const kindnessFormatted = kindness || DEFAULT_KINDESS;\n\n    const htmlString = `<p><b>${city}, ${state}</b></p><p>${kindnessFormatted}</p>`\n\n    tooltip.html(htmlString)\n}\n\nconst hideTooltip = () => {\n    const tooltip = d3.select('.map-tooltip')\n    tooltip\n        .transition().duration(500)\n        .style(\"opacity\", 0)\n    \n    tooltip.html('')\n}\n\nexport {\n    showTooltip,\n    hideTooltip\n}","import React, { useEffect, useState } from 'react'\nimport Tabletop from 'tabletop'\nimport { MapViewDemo } from './components'\n\nimport './styles/App.css'\n\nconst App = () => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    if (data === null) {\n      Tabletop.init({\n        // TODO add this key to some environment variable, don't hard-code here\n        key: 'https://docs.google.com/spreadsheets/d/1IqEBIcnFZ_BFCrD8jhk11yVoOjfxzZpiZLdL4cL3oK0/pubhtml',\n        simpleSheet: true,\n      })\n        .then(data => {\n          console.log(data)\n          setData(data)\n        })\n        .catch(console.warn)\n    }\n  }, [data])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"map-wrapper\">\n          <MapViewDemo data={data} />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}