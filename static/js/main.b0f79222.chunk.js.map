{"version":3,"sources":["components/mapboxGLMap/mapUtils.js","utils/dataConstants.js","components/tooltip/index.js","utils/stringUtils.js","utils/dataUtils.js","components/mapboxGLMap/index.js","components/sidebar/kindessCard.js","components/sidebar/loadingSpinner.js","components/sidebar/infoCard.js","components/sidebar/traceStepper.js","components/sidebar/index.js","App.js","reportWebVitals.js","index.js"],"names":["zoomMapToBoundingObject","map","boundingObject","topRight","bottomLeft","fitBounds","lng","lat","showTooltip","e","d","d3","transition","duration","style","pageX","pageY","resetAllCircleColors","ID_KEY_NAME","CITY_KEY_NAME","KINDNESS_KEY_NAME","TooltipContents","node","isSelected","console","log","inp","length","city","DataConstants","state","kindness","substring","LNG_KEY","LAT_KEY","computeLngLatBoundingBox","lngLatPoints","paddingMiles","isRatioPadding","paddingDegreesLng","paddingDegreesLat","extractKey","key","maxLng","Math","max","minLng","min","maxLat","minLat","styles","width","height","position","mapboxgl","accessToken","workerClass","MapboxWorker","MapboxGLMap","setIsLoading","data","selectedNode","setSelectedNode","hoveredNode","setHoveredNode","isTracing","traceList","setTraceList","traceIndex","setTraceIndex","useState","setMap","mapContainer","useRef","one","two","uniqueCircleId","index","circleClass","generateLngLatArray","DataUtils","visitNode","MapUtils","attr","flyTo","center","zoom","essential","setAllEventHandlers","on","callback","useEffect","myMap","Map","container","current","getCanvasContainer","svg","append","project","LngLat","dots","selectAll","enter","mapRender","x","y","resize","remove","dataFilt","filter","sort","a","b","dateTime","toMillis","otherCircles","boundingObjectFilt","traceIndexNew","indexOf","ref","el","className","React","memo","prevProps","nextProps","KindnessCard","street","zip","date","dateString","toLocaleString","DateTime","DATE_FULL","timeString","TIME_SIMPLE","LoadingSpinner","SidebarInfoCard","TraceStepper","setIsTracing","disabled","onClick","Sidebar","isLoading","href","target","src","App","setData","Tabletop","init","simpleSheet","then","dataProc","i","fromFormat","catch","warn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0f79222.chunk.js","sourcesContent":["import * as d3 from 'd3'\nimport mapboxgl from \"mapbox-gl\"\n\nconst initializeMap = ({ setMap, mapContainer, boundingObject }) => {\n    const myMap = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: 'mapbox://styles/mapbox/light-v10',\n    })\n\n    // immediately center based on the bounding box of our data points\n    zoomMapToBoundingObject(myMap, boundingObject)\n\n    myMap.on(\"load\", () => {\n        setMap(myMap)\n    })\n}\n\nconst zoomMapToBoundingObject = (map, boundingObject) => {\n    const { topRight, bottomLeft } = boundingObject\n    map.fitBounds([\n        [bottomLeft.lng, bottomLeft.lat],\n        [topRight.lng, topRight.lat]\n    ]);\n}\n\nconst showTooltip = (e, d) => {\n    const tooltip = d3.select('.map-tooltip')\n    tooltip\n        .transition()\n        .duration(0)\n        .style('opacity', 0.8)\n        .style('left', `${e.pageX + 50}px`)\n        .style('top', `${e.pageY - 50}px`)\n}\n\nconst hideTooltip = (callback) => {\n    const tooltip = d3.select('.map-tooltip')\n    tooltip\n        .transition().duration(500)\n        .style(\"opacity\", 0)\n        .on('end', callback)\n}\n\nconst resetAllCircleColors = () => {\n    return d3.selectAll('.circle')\n        .transition()\n        .duration(500)\n        .style('fill', 'steelblue')\n}\n\nconst clearAllEventHandlers = (selection) => {\n    selection\n        .on('mouseover', null)\n        .on('mousemove', null)\n        .on('mouseout', null)\n        .on('click', null)\n}\n\nexport {\n    initializeMap,\n    zoomMapToBoundingObject,\n    showTooltip,\n    hideTooltip,\n    resetAllCircleColors,\n    clearAllEventHandlers,\n}\n","const TIMESTAMP_KEY_NAME = 'Timestamp'\nconst ID_KEY_NAME = 'ID NUMBER on kindness card'\nconst CITY_KEY_NAME = 'CITY where act of kindness took place'\nconst STATE_KEY_NAME = 'STATE'\nconst ZIP_KEY_NAME = '[OPTIONAL] ZIP CODE'\nconst STREET_KEY_NAME = '[Optional] STREET NAME'\nconst KINDNESS_KEY_NAME = '[Optional] Tell us about the act of kindness you received!'\nconst CENTER_LNG_KEY_NAME = 'CenterLon'\nconst CENTER_LAT_KEY_NAME = 'CenterLat'\n\nconst TEST_DATA_URL = 'https://docs.google.com/spreadsheets/d/1IqEBIcnFZ_BFCrD8jhk11yVoOjfxzZpiZLdL4cL3oK0/pubhtml'\nconst SPOOF_DATA_URL = 'https://docs.google.com/spreadsheets/d/1BvBwyy1xYYhdiokMfbyxssu5nlB0arRMvxyuQLCzsH4/pubhtml'\n\nconst TIMESTAMP_FORMAT = 'MM/dd/yy h:mm a'\n\n// TOOD add constants for new parsed geo fields when those are avaiable\n// Spoof Data Names\n// const TIMESTAMP_KEY_NAME = 'Timestamp'\n// const ID_KEY_NAME = 'id'\n// const STREET_KEY_NAME = 'street'\n// const STATE_KEY_NAME = 'admin_level_1'\n// const CITY_KEY_NAME = 'city'\n// const ZIP_KEY_NAME = 'zip_code'\n// const KINDNESS_KEY_NAME = 'description'\n// const CENTER_LNG_KEY_NAME = 'center_lon'\n// const CENTER_LAT_KEY_NAME = 'center_lat'\n\nexport {\n    TIMESTAMP_KEY_NAME,\n    ID_KEY_NAME,\n    CITY_KEY_NAME,\n    STATE_KEY_NAME,\n    ZIP_KEY_NAME,\n    STREET_KEY_NAME,\n    KINDNESS_KEY_NAME,\n    CENTER_LNG_KEY_NAME,\n    CENTER_LAT_KEY_NAME,\n\n    TEST_DATA_URL,\n    SPOOF_DATA_URL,\n\n    TIMESTAMP_FORMAT,\n}\n","import * as DataConstants from '../../utils/dataConstants'\nimport * as StringUtils from '../../utils/stringUtils'\n\nconst TooltipContents = ({ node, isSelected }) => {\n    // handle null node case\n    if (! node) {\n        return null;\n    }\n\n    console.log('rendering tooltip')\n\n    const city = node[DataConstants.CITY_KEY_NAME]\n    const state = node[DataConstants.STATE_KEY_NAME]\n    const kindness = node[DataConstants.KINDNESS_KEY_NAME]\n\n    return (\n        <div>\n            <p><b>{city ? `${city}, ` : null}{state}</b></p>\n            <p><b>{StringUtils.trimWithElipses(kindness, 140)}</b></p>\n            <p>{! isSelected ? 'Click for more info!' : null}</p>\n        </div>\n    )\n}\n\nexport default TooltipContents\n","const trimWithElipses = (inp, length) => {\n    if (inp.length > length) {\n        return `${inp.substring(0, length)}`\n    }\n    \n    return inp\n}\n\nexport {\n    trimWithElipses\n}","import { DateTime } from  'luxon'\nimport * as DataConstants from './dataConstants'\n\nconst DEGREES_TO_MILES = 69\nconst LNG_KEY = 'lng'\nconst LAT_KEY = 'lat'\n\nconst processRawSheetsData = (data) => {\n    const dataProc = data ? data.map((d, i) => ({\n        ...d,\n        index: i,\n        dateTime: DateTime.fromFormat(d[DataConstants.TIMESTAMP_KEY_NAME], DataConstants.TIMESTAMP_FORMAT),\n    })) : null\n    return dataProc\n}\n\nconst nodesAreEqual = (one, two) => {\n    if (! one || ! two)\n        return false\n        \n    return one.index == two.index\n}\n\nconst computeLngLatBoundingBox = (lngLatPoints, paddingMiles, isRatioPadding = false) => {\n    // compute top right and bottom left\n    // then, add some padding amount in miles\n    var paddingDegreesLng = 0\n    var paddingDegreesLat = 0\n    if (! isRatioPadding)\n        paddingDegreesLng = paddingMiles / DEGREES_TO_MILES\n        paddingDegreesLat = paddingDegreesLng\n\n    const extractKey = key => lngLatPoints.map((d => d[key]))\n\n    const maxLng = Math.max(...extractKey(LNG_KEY))\n    const minLng = Math.min(...extractKey(LNG_KEY))\n    const maxLat = Math.max(...extractKey(LAT_KEY))\n    const minLat = Math.min(...extractKey(LAT_KEY))\n\n    if (isRatioPadding) {\n        paddingDegreesLng = (maxLng - minLng) * paddingMiles\n        paddingDegreesLat = (maxLat - minLat) * paddingMiles\n    }\n\n    return {\n        topRight: {\n            lng: maxLng + paddingDegreesLng,\n            lat: minLat + paddingDegreesLat,\n        },\n        bottomLeft: {\n            lng: minLng - paddingDegreesLng * 6,\n            lat: maxLat - paddingDegreesLat,\n        }\n    }\n}\n\nexport {\n    processRawSheetsData,\n    nodesAreEqual,\n    computeLngLatBoundingBox,\n}\n","import React, { useEffect, useRef, useState } from \"react\"\nimport mapboxgl from \"mapbox-gl\"\n// import \"mapbox-gl/dist/mapbox-gl.css\"\nimport * as d3 from 'd3'\nimport * as MapUtils from './mapUtils'\nimport * as DataConstants from '../../utils/dataConstants'\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\nimport TooltipContents from '../tooltip'\nimport * as DataUtils from '../../utils/dataUtils'\n\nimport '../../styles/Map.css'\n\nconst styles = {\n    width: \"100vw\",\n    height: \"100vh\",\n    position: \"absolute\"\n}\n\nconst POINT_ZOOM = 12\nconst DEFAULT_RADIUS = 10\nconst BIG_RADIUS = 30\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiY21vcm9uZXkiLCJhIjoiY2tudGNscDJjMDFldDJ3b3pjMTh6ejJyayJ9.YAPmFkdy_Eh9K20cFlIvaQ'\nmapboxgl.workerClass = MapboxWorker;\n\nconst MapboxGLMap = ({ setIsLoading, data, selectedNode, setSelectedNode, hoveredNode, setHoveredNode, isTracing, traceList, setTraceList, traceIndex, setTraceIndex }) => {\n    const [map, setMap] = useState(null)\n    const mapContainer = useRef(null)\n\n    console.log('rendering map')\n\n    // write function to generate ID of circle\n    const uniqueCircleId = d => `circle-${d.index}`\n\n    // write function to generate class of circle based off id key\n    const circleClass = d => `circle circle-${d[DataConstants.ID_KEY_NAME]}`\n\n    // write function to quickly convert a data array to the fomat for lat lng\n    const generateLngLatArray = data => data.map(d => ({\n        lng: d[DataConstants.CENTER_LNG_KEY_NAME],\n        lat: d[DataConstants.CENTER_LAT_KEY_NAME],\n    }))\n\n    // get the bounds of our data\n    const boundingObject = data ? DataUtils.computeLngLatBoundingBox(\n        generateLngLatArray(data), 200\n    ) : null\n\n    const visitNode = (d) => {\n        MapUtils.resetAllCircleColors()\n            .attr(\"r\", DEFAULT_RADIUS)\n            .style('opacity', 1)\n    \n        // make this circle red\n        const circle = d3.select(`#${uniqueCircleId(d)}`)\n        circle\n            .transition()\n            .duration(500)\n            .style('fill', 'red')\n            .attr(\"r\", DEFAULT_RADIUS)\n\n        map.flyTo({\n            center: [\n                d[DataConstants.CENTER_LNG_KEY_NAME],\n                d[DataConstants.CENTER_LAT_KEY_NAME],\n            ],\n            zoom: POINT_ZOOM, // TODO cofigure this zoom amount\n            essential: true // this animation is considered essential with respect to prefers-reduced-motion\n        });\n\n        // set the selected node and callback the parent\n        // TODO potentially clear any tracing if this node is not in the current trace\n        // have to tighten up logic around this...\n        setSelectedNode(d)\n    }\n\n    const setAllEventHandlers = () => {\n        d3.selectAll(\".circle\")\n            .on('mouseover', (e, d) => {\n                setHoveredNode(d)\n                MapUtils.showTooltip(e, d)\n            })\n            .on('mousemove', (e, d) => {\n                MapUtils.showTooltip(e, d)\n            })\n            .on('mouseout', (e, d) => {\n                MapUtils.hideTooltip(() => setHoveredNode(null))\n            })\n            .on('click', (e, d) => {\n                visitNode(d)\n            })\n    }\n\n    useEffect(() => {\n        if (!map && data) {\n            console.log('one')\n            MapUtils.initializeMap({ setMap, mapContainer, boundingObject })\n        }\n    }, [map, data])\n\n    useEffect(() => {\n        if (map && data !== null) {\n            console.log('two')\n            var container = map.getCanvasContainer()\n            var svg = d3\n                .select(container)\n                .append(\"svg\")\n                .attr(\"width\", \"100%\")\n                .attr(\"height\", \"100%\")\n                .style(\"position\", \"absolute\")\n                .style(\"z-index\", 2)\n                .style('top', 0)\n                .style('left', 0)\n\n            // write projection function\n            const project = (d) => {\n                return map.project(\n                    new mapboxgl.LngLat(d[DataConstants.CENTER_LNG_KEY_NAME], d[DataConstants.CENTER_LAT_KEY_NAME])\n                )\n            }\n\n            var dots = svg\n                .selectAll(\"circle\")\n                .data(data)\n                .enter()\n                .append('circle')\n                .attr('id', uniqueCircleId)\n                .attr('class', circleClass)\n                .attr(\"r\", DEFAULT_RADIUS)\n                .style(\"fill\", \"steelblue\")\n            \n            // add event handlers\n            setAllEventHandlers()\n\n            // define render function for mapbox\n            const mapRender = () => {\n                // project dots\n                dots\n                    .attr('cx', d => project(d).x)\n                    .attr('cy', d => project(d).y)\n            }\n\n            map.on('viewreset', mapRender)\n            map.on('move', mapRender)\n            map.on('moveend', mapRender)\n\n            map.on('load', () => {\n                map.resize()\n            })\n\n            mapRender()\n\n            // notify that we are done loading\n            setIsLoading(false)\n\n            return () => map.remove()\n        }\n    }, [map, data])\n\n    useEffect(() => {\n        // re-fly to center on selectedNode update, as long as we are not tracing\n        if (map && data && !selectedNode) {\n            console.log('three')\n            MapUtils.zoomMapToBoundingObject(map, boundingObject)\n            MapUtils.resetAllCircleColors()\n                .attr(\"r\", DEFAULT_RADIUS)\n                .style('opacity', 1)\n            setAllEventHandlers()\n        }\n    }, [map, data, selectedNode])\n\n    useEffect(() => {\n        if (isTracing) {\n            console.log('four')\n            // TODO move this to a helper function\n            const dataFilt = data.filter(d => d[DataConstants.ID_KEY_NAME] == selectedNode[DataConstants.ID_KEY_NAME])\n                .sort((a, b) => a.dateTime.toMillis() - b.dateTime.toMillis())\n            console.log(dataFilt)\n\n            // Remove all circles that aren't in the given class name, and also disable their events\n            const otherCircles = d3.selectAll('.circle')\n                .filter(d => d[DataConstants.ID_KEY_NAME] !== selectedNode[DataConstants.ID_KEY_NAME])\n                \n            otherCircles.transition()\n                .duration(500)\n                .style('opacity', '0')\n            \n            MapUtils.clearAllEventHandlers(otherCircles)\n            \n            d3.selectAll('.circle')\n                .filter(d => d[DataConstants.ID_KEY_NAME] === selectedNode[DataConstants.ID_KEY_NAME])\n                .transition()\n                .duration(500)\n                .style('fill', 'purple')\n            \n            // re-compute bounding box\n            // TODO write logic for ratio-based padding\n            const boundingObjectFilt = DataUtils.computeLngLatBoundingBox(\n                generateLngLatArray(dataFilt),\n                0.05,\n                true\n            )\n            MapUtils.zoomMapToBoundingObject(map, boundingObjectFilt)\n\n            // set the trace list and index accordingly\n            setTraceList(dataFilt)\n            const traceIndexNew = dataFilt.map(d => d.index).indexOf(selectedNode.index)\n            setTraceIndex(traceIndexNew)\n        } else if (selectedNode) {\n            console.log('no longer tracing')\n            visitNode(selectedNode)\n            setAllEventHandlers()\n        }\n    }, [isTracing, selectedNode])\n\n    useEffect(() => {\n        if (map && traceList && traceList.length > 0) {\n            console.log('five')\n            console.log(traceIndex, traceList)\n            // // get the node at the index and fly there!\n            // const currentNode = traceList[traceIndex]\n            // map.flyTo({\n            //     center: [\n            //         currentNode[DataConstants.CENTER_LNG_KEY_NAME],\n            //         currentNode[DataConstants.CENTER_LAT_KEY_NAME],\n            //     ],\n            //     zoom: POINT_ZOOM,\n            //     essential: true,\n            // })\n\n            // also make that node bigger and green\n            d3.selectAll('.circle')\n                .filter(d => d[DataConstants.ID_KEY_NAME] == selectedNode[DataConstants.ID_KEY_NAME])\n                .transition()\n                .duration(500)\n                .style('fill', 'purple')\n                .attr('r', DEFAULT_RADIUS)\n\n            d3.select(`#${uniqueCircleId(traceList[traceIndex])}`)\n                .transition()\n                .duration(500)\n                .style('fill', 'green')\n                .attr('r', BIG_RADIUS)\n        }\n    }, [traceList, traceIndex])\n\n    return <div ref={el => (mapContainer.current = el)} style={styles}>\n        <div className=\"map-tooltip\" style={{ \"opacity\": 0 }}>\n            <TooltipContents node={hoveredNode} isSelected={DataUtils.nodesAreEqual(hoveredNode, selectedNode)} />\n        </div>\n    </div>\n}\n\nexport default React.memo(MapboxGLMap, (prevProps, nextProps) => {\n    // { setIsLoading, data, selectedNode, setSelectedNode, hoveredNode, setHoveredNode, traceNode, traceList, setTraceList, traceIndex }\n    return prevProps.data === nextProps.data &&\n    prevProps.selectedNode === nextProps.selectedNode &&\n    prevProps.hoveredNode === nextProps.hoveredNode &&\n    prevProps.isTracing === nextProps.isTracing &&\n    prevProps.traceList === nextProps.traceList &&\n    prevProps.traceIndex === nextProps.traceIndex\n})\n","import * as DataConstants from '../../utils/dataConstants'\nimport { DateTime } from  'luxon'\n\nconst KindnessCard = ({ node }) => {\n    console.log('rendering card')\n    // handle null node case\n    if (! node) {\n        return null;\n    }\n\n    const timestamp = node[DataConstants.TIMESTAMP_KEY_NAME]\n    const street = node[DataConstants.STREET_KEY_NAME]\n    const city = node[DataConstants.CITY_KEY_NAME]\n    const state = node[DataConstants.STATE_KEY_NAME]\n    const zip = node[DataConstants.ZIP_KEY_NAME]\n    const kindness = node[DataConstants.KINDNESS_KEY_NAME]\n\n    // apply necessary parsing for date\n    const date = node.dateTime\n    const dateString = date.toLocaleString(DateTime.DATE_FULL)\n    const timeString = date.toLocaleString(DateTime.TIME_SIMPLE)\n\n    return (\n        <div className=\"kindness-card-inner\">\n            <p>Date: <b>{dateString}</b></p>\n            <p>Time: <b>{timeString}</b></p>\n            <p>Address: <b>{street || 'No street provided.'}</b></p>\n            <p>City: <b>{city || 'No city provided.'}</b></p>\n            <p>State: <b>{state || 'No state provided.'}</b></p>\n            <p>Zip Code: <b>{zip || 'No zip code provided.'}</b></p>\n            <p>Act of Kindness Description:</p>\n            <p><b>{kindness || 'No kindess description provided.'}</b></p>\n        </div>\n    )\n}\n\nexport default KindnessCard","import '../../styles/Loading.css'\n\nconst LoadingSpinner = () => {\n    console.log('rendering loading')\n    return (\n        <div className=\"loading-wrapper\">\n            <div className=\"la-ball-clip-rotate la-2x\">\n                <div></div>\n            </div>\n            <p>Loading...</p>\n        </div>\n    )\n}\n\nexport default LoadingSpinner\n","/*\n    Simple component to render some useful info when no node is selected.\n*/\nconst SidebarInfoCard = () => {\n    console.log('rendering side info card')\n    return (\n        <div>\n            <p>Click a circle to explore that act of kindness further!</p>\n        </div>\n    )\n}\n\nexport default SidebarInfoCard","import KindnessCard from './kindessCard'\n\nconst TraceStepper = ({ isTracing, setIsTracing, traceList, traceIndex, setTraceIndex }) => {\n    console.log('rendering trace')\n\n    if (! isTracing) {\n        return null\n    }\n\n    // get the node at the given trace index\n    // TODO update this logic \n    const node = traceList[traceIndex]\n\n    return (\n        <div className=\"trace-stepper-wrapper\">\n            <div className=\"trace-stepper-button-horizontal\">\n                <button disabled={traceIndex === 0} onClick={() => setTraceIndex(traceIndex - 1)}>Previous</button>\n                <button disabled={traceIndex === traceList.length - 1} onClick={() => setTraceIndex(traceIndex + 1)}>Next</button>\n            </div>\n            <div className=\"trace-stepper-button-horizontal\">\n                <button disabled={traceIndex === 0} onClick={() => setTraceIndex(0)}>Earliest</button>\n                <button disabled={traceIndex === traceList.length - 1} onClick={() => setTraceIndex(traceList.length - 1)}>Latest</button>\n            </div>\n            <p>{`${traceIndex + 1} / ${traceList.length}`}</p>\n            <KindnessCard node={node} />\n            <div className=\"trace-stepper-button-below\">\n                <button onClick={() => {\n                    setIsTracing(false)\n                }}>\n                    Exit Trace Mode\n                </button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default TraceStepper\n","import React from 'react'\nimport '../../styles/Sidebar.css'\nimport KindessCard from './kindessCard'\nimport LoadingSpinner from './loadingSpinner'\nimport SidebarInfoCard from './infoCard'\nimport TraceStepper from './traceStepper'\n\nconst Sidebar = ({ isLoading, selectedNode, setSelectedNode, isTracing, setIsTracing, traceList, setTraceList, traceIndex, setTraceIndex }) => {\n    console.log('rendering sidebar')\n    return (\n        <div className=\"sidebar-flex\">\n            <h1>Kindess Tracker</h1>\n            {\n                isLoading ? <LoadingSpinner /> : null\n            }\n            {\n                !isLoading && !selectedNode ? <SidebarInfoCard /> : null\n            }\n            { !isTracing ? (\n                <div className=\"selected-card-wrapper\">\n                    <KindessCard node={selectedNode} />\n                </div>\n            ) : null\n            }\n            <div className=\"sidebar-clear-div\">\n                {\n                    selectedNode && !isTracing ? (\n                        <button className=\"sidebar-button-below\" onClick={() => {\n                            setSelectedNode(null)\n                            setTraceList([])\n                            setTraceIndex(0)\n                            setIsTracing(false)\n                        }}>Clear Selected Node</button>\n                    ) : null\n                }\n                {\n                    (selectedNode && !isTracing) ? (\n                        <button onClick={() => setIsTracing(true)}>Trace this Act!</button>\n                    ) : null\n                }\n            </div>\n            <TraceStepper\n                isTracing={isTracing}\n                setIsTracing={setIsTracing}\n                traceList={traceList}\n                traceIndex={traceIndex}\n                setTraceIndex={setTraceIndex}\n            />\n            <div className=\"sidebar-bottom-content\">\n                <p className=\"sidebar-small-text\">Christian Moroney, Jackson Bernatchez, Kevin Lyons</p>\n                <p className=\"sidebar-small-text\">6.859 Final Project Spring 2021</p>\n                <div>\n                    <a href=\"https://github.com/6859-sp21/final-project-kindness-tracker\" target=\"_blank\">\n                        <img className=\"sidebar-git-image\" src=\"https://image.flaticon.com/icons/png/512/25/25231.png\"></img>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(Sidebar, (prevProps, nextProps) => {\n    return (prevProps.isLoading === nextProps.isLoading &&\n        prevProps.selectedNode === nextProps.selectedNode &&\n        prevProps.isTracing === nextProps.isTracing &&\n        prevProps.traceList === nextProps.traceList &&\n        prevProps.traceIndex === nextProps.traceIndex)\n})\n","import React, { useEffect, useState } from 'react'\nimport Tabletop from 'tabletop'\nimport { Sidebar, MapboxGLMap } from './components'\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp'\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker'\nimport * as DataConstants from './utils/dataConstants'\nimport * as DataUtils from './utils/dataUtils'\n\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoiY21vcm9uZXkiLCJhIjoiY2tudGNscDJjMDFldDJ3b3pjMTh6ejJyayJ9.YAPmFkdy_Eh9K20cFlIvaQ'\nmapboxgl.workerClass = MapboxWorker\nmapboxgl.accessToken = MAPBOX_ACCESS_TOKEN\n\nimport './styles/App.css'\n\nconst App = () => {\n  const [data, setData] = useState(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [selectedNode, setSelectedNode] = useState(null)\n  const [hoveredNode, setHoveredNode] = useState(null)\n  const [isTracing, setIsTracing] = useState(false)\n  const [traceList, setTraceList] = useState([])\n  const [traceIndex, setTraceIndex] = useState(0)\n\n  useEffect(() => {\n    if (data === null) {\n      Tabletop.init({\n        key: DataConstants.SPOOF_DATA_URL,\n        simpleSheet: true,\n      })\n        .then(data => {\n          // process data right away\n          const dataProc = DataUtils.processRawSheetsData(data)\n          setData(dataProc)\n        })\n        .catch(console.warn)\n    }\n  }, [data])\n\n  return (\n    <div className=\"App\">\n      <div className=\"horizontal-stack\">\n        <div className=\"left-sidebar\">\n          <Sidebar\n            isLoading={isLoading}\n            selectedNode={selectedNode}\n            setSelectedNode={setSelectedNode}\n            isTracing={isTracing}\n            setIsTracing={setIsTracing}\n            traceList={traceList}\n            setTraceList={setTraceList}\n            traceIndex={traceIndex}\n            setTraceIndex={setTraceIndex}\n          />\n        </div>\n        <div className=\"map-wrapper\">\n          {/* <MapViewDemo data={data} map={map} selectedNode={selectedNode} setSelectedNode={setSelectedNode}  /> */}\n          <MapboxGLMap\n            data={data}\n            setIsLoading={setIsLoading}\n            selectedNode={selectedNode}\n            setSelectedNode={setSelectedNode}\n            hoveredNode={hoveredNode}\n            setHoveredNode={setHoveredNode}\n            isTracing={isTracing}\n            traceList={traceList}\n            setTraceList={setTraceList}\n            traceIndex={traceIndex}\n            setTraceIndex={setTraceIndex}\n          />\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}