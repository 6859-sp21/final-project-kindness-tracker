{"version":3,"sources":["hooks/useD3.js","components/barChartDemo.js","components/mapViewDemo.js","data/demo-data.js","App.js","reportWebVitals.js","index.js"],"names":["useD3","renderChartFn","dependencies","ref","useRef","useEffect","d3","current","BarChartDemo","data","svg","margin","x","domain","map","d","year","rangeRound","padding","y1","sales","select","call","g","attr","tickValues","width","filter","v","undefined","tickSizeOuter","style","ticks","remove","append","text","selectAll","join","bandwidth","length","height","marginRight","marginLeft","className","MapViewDemo","console","log","path","zoom","scaleExtent","on","event","transform","k","states","transition","duration","node","invert","topojson","us","objects","features","bounds","x0","y0","x1","stopPropagation","this","translate","scale","Math","min","max","properties","name","a","b","efficiency","App","useState","setData","loading","Tabletop","init","key","simpleSheet","then","catch","warn","demoData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b56dc2e0.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\n\nconst useD3 = (renderChartFn, dependencies) => {\n    const ref = useRef()\n\n    useEffect(() => {\n        renderChartFn(d3.select(ref.current))\n        return () => {}\n    }, dependencies)\n\n    return ref\n}\n\nexport default useD3\n","import React, { useEffect } from 'react'\nimport { useD3 } from '../hooks'\nimport * as d3 from 'd3'\n\nconst BarChartDemo = ({ data }) => {\n  const ref = useD3(\n    (svg) => {\n      const height = 500\n      const width = 500\n      const margin = { top: 20, right: 20, bottom: 20, left: 40 }\n\n      const x = d3\n        .scaleBand()\n        .domain(data.map((d) => d.year))\n        .rangeRound([margin.left, width - margin.right])\n        .padding(0.1);\n\n      const y1 = d3\n        .scaleLinear()\n        .domain([0, d3.max(data, (d) => d.sales)])\n        .rangeRound([height - margin.bottom, margin.top]);\n\n      const xAxis = (g) =>\n        g.attr(\"transform\", `translate(0,${height - margin.bottom})`).call(\n          d3\n            .axisBottom(x)\n            .tickValues(\n              d3\n                .ticks(...d3.extent(x.domain()), width / 40)\n                .filter((v) => x(v) !== undefined)\n            )\n            .tickSizeOuter(0)\n        );\n\n      const y1Axis = (g) =>\n        g\n          .attr(\"transform\", `translate(${margin.left},0)`)\n          .style(\"color\", \"white\")\n          .call(d3.axisLeft(y1).ticks(null, \"s\"))\n          .call((g) => g.select(\".domain\").remove())\n          .call((g) =>\n            g\n              .append(\"text\")\n              .attr(\"x\", -margin.left)\n              .attr(\"y\", 10)\n              .attr(\"fill\", \"currentColor\")\n              .attr(\"text-anchor\", \"start\")\n              .text(data.y1)\n          );\n\n      svg.select(\".x-axis\").call(xAxis);\n      svg.select(\".y-axis\").call(y1Axis);\n\n      svg\n        .select(\".plot-area\")\n        .attr(\"fill\", \"steelblue\")\n        .selectAll(\".bar\")\n        .data(data)\n        .join(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", (d) => x(d.year))\n        .attr(\"width\", x.bandwidth())\n        .attr(\"y\", (d) => y1(d.sales))\n        .attr(\"height\", (d) => y1(0) - y1(d.sales));\n    },\n    [data.length]\n  )\n\n  return (\n    <svg\n      ref={ref}\n      style={{\n        height: 500,\n        width: '100%',\n        marginRight: '0px',\n        marginLeft: '0px',\n      }}\n    >\n      <g className='plot-area' />\n      <g className='x-axis' />\n      <g className='y-axis' />\n    </svg>\n  )\n}\n\nexport default BarChartDemo\n","import React, { useEffect } from 'react'\nimport { useD3 } from '../hooks'\nimport * as d3 from 'd3'\nimport * as topojson from 'topojson'\nimport us from '../data/states-albers-10m.json'\n\nconst MapViewDemo = ({ data }) => {\n    console.log(\"Map View Demo Data --> \", data)\n    const path = d3.geoPath()\n    const ref = useD3(\n        (svg) => {\n            const width = 975;\n            const height = 610;\n\n            const zoom = d3.zoom()\n                .scaleExtent([1, 8])\n                .on(\"zoom\", zoomed);\n\n            svg.attr(\"viewBox\", [0, 0, width, height])\n                .on(\"click\", reset);\n\n            const g = svg.append(\"g\");\n\n            const states = g.append(\"g\")\n                .attr(\"fill\", \"#444\")\n                .attr(\"cursor\", \"pointer\")\n                .selectAll(\"path\")\n                .data(topojson.feature(us, us.objects.states).features)\n                .join(\"path\")\n                .on(\"click\", clicked)\n                .attr(\"d\", path);\n\n            states.append(\"title\")\n                .text(d => d.properties.name);\n\n            g.append(\"path\")\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke\", \"white\")\n                .attr(\"stroke-linejoin\", \"round\")\n                .attr(\"d\", path(topojson.mesh(us, us.objects.states, (a, b) => a !== b)));\n\n            svg.call(zoom);\n\n            function reset() {\n                states.transition().style(\"fill\", null);\n                svg.transition().duration(750).call(\n                    zoom.transform,\n                    d3.zoomIdentity,\n                    d3.zoomTransform(svg.node()).invert([width / 2, height / 2])\n                );\n            }\n\n            function clicked(event, d) {\n                const [[x0, y0], [x1, y1]] = path.bounds(d);\n                event.stopPropagation();\n                states.transition().style(\"fill\", null);\n                d3.select(this).transition().style(\"fill\", \"red\");\n                svg.transition().duration(750).call(\n                    zoom.transform,\n                    d3.zoomIdentity\n                        .translate(width / 2, height / 2)\n                        .scale(Math.min(8, 0.9 / Math.max((x1 - x0) / width, (y1 - y0) / height)))\n                        .translate(-(x0 + x1) / 2, -(y0 + y1) / 2),\n                    d3.pointer(event, svg.node())\n                );\n            }\n\n            function zoomed(event) {\n                const { transform } = event;\n                g.attr(\"transform\", transform);\n                g.attr(\"stroke-width\", 1 / transform.k);\n            }\n        },\n        []\n    )\n\n    return (\n        <svg ref={ref}\n          style={{\n            height: 750,\n            width: '100%',\n            marginRight: '0px',\n            marginLeft: '0px',\n          }}\n        >\n        </svg>\n    )\n}\n\nexport default MapViewDemo\n","const data = [\n    { year: 1980, efficiency: 24.3, sales: 8949000 },\n    { year: 1985, efficiency: 27.6, sales: 10979000 },\n    { year: 1990, efficiency: 28, sales: 9303000 },\n    { year: 1991, efficiency: 28.4, sales: 8185000 },\n    { year: 1992, efficiency: 27.9, sales: 8213000 },\n    { year: 1993, efficiency: 28.4, sales: 8518000 },\n    { year: 1994, efficiency: 28.3, sales: 8991000 },\n    { year: 1995, efficiency: 28.6, sales: 8620000 },\n    { year: 1996, efficiency: 28.5, sales: 8479000 },\n    { year: 1997, efficiency: 28.7, sales: 8217000 },\n    { year: 1998, efficiency: 28.8, sales: 8085000 },\n    { year: 1999, efficiency: 28.3, sales: 8638000 },\n    { year: 2000, efficiency: 28.5, sales: 8778000 },\n    { year: 2001, efficiency: 28.8, sales: 8352000 },\n    { year: 2002, efficiency: 29, sales: 8042000 },\n    { year: 2003, efficiency: 29.5, sales: 7556000 },\n    { year: 2004, efficiency: 29.5, sales: 7483000 },\n    { year: 2005, efficiency: 30.3, sales: 7660000 },\n    { year: 2006, efficiency: 30.1, sales: 7762000 },\n    { year: 2007, efficiency: 31.2, sales: 7562000 },\n    { year: 2008, efficiency: 31.5, sales: 6769000 },\n    { year: 2009, efficiency: 32.9, sales: 5402000 },\n    { year: 2010, efficiency: 33.9, sales: 5636000 },\n    { year: 2011, efficiency: 33.1, sales: 6093000 },\n    { year: 2012, efficiency: 35.3, sales: 7245000 },\n    { year: 2013, efficiency: 36.4, sales: 7586000 },\n    { year: 2014, efficiency: 36.5, sales: 7708000 },\n    { year: 2015, efficiency: 37.2, sales: 7517000 },\n    { year: 2016, efficiency: 37.7, sales: 6873000 },\n    { year: 2017, efficiency: 39.4, sales: 6081000 },\n]\n\nexport default data","import React, { useEffect, useState } from 'react'\nimport Tabletop from 'tabletop'\nimport { BarChartDemo, MapViewDemo } from './components'\nimport demoData from './data/demo-data'\n\nimport './App.css'\n\nconst App = () => {\n  const [data, setData] = useState(null)\n  const loading = data === null\n\n  useEffect(() => {\n    if (data === null) {\n      Tabletop.init({\n        // TODO add this key to some environment variable, don't hard-code here\n        key: 'https://docs.google.com/spreadsheets/d/1IqEBIcnFZ_BFCrD8jhk11yVoOjfxzZpiZLdL4cL3oK0/pubhtml',\n        simpleSheet: true,\n      })\n        .then(data => {\n          console.log(data)\n          setData(data)\n        })\n        .catch(console.warn)\n    }\n  }, [data])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Welcome to Kindness Tracker!\n        </p>\n        <p>\n          {loading ? 'Loading...' : `Loaded ${data.length} rows from Google Sheets!`}\n        </p>\n        <p>\n          :-)\n        </p>\n        <div className=\"bar-wrapper\">\n          <BarChartDemo data={demoData} />\n        </div>\n        <div className=\"map-wrapper\">\n          <MapViewDemo data={data} />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}